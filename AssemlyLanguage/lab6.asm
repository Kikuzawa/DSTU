.code
InputInt proc
mov ah,09h ; Функция отображения строки
lea dx, msg ; Загрузка адреса сообщения для пользователя

int 21h ; Вызов DOS-сервиса

;space
mov dl, ' '
mov ah, 02h
int 21h

mov si, offset buff+2 ; Указатель на первый символ ввода
cmp byte ptr [si], "-" ; Проверка первого символа на '-'
jnz ii1
mov di, 1 ; Устанавливаем флаг знака в 1 если отрицательное число
inc si ; Переход к следующему символу
ii1:

xor ax, ax ; Очистка регистра ax
mov bx, 10 ; Устанавливаем основание 10 для умножения
ii2:
mov cl, [si] ; Загрузка символа в cl
cmp cl, 0dh ; Проверка конца строки (перевод каретки)
jz endin

cmp cl, '0' ; Проверка, является ли символ цифрой (0-9)
jb er
cmp cl, '9'
ja er

sub cl, '0' ; Преобразование ASCII цифры в ее фактическое значение
mul bx ; Умножение ax на 10
add ax, cx ; Добавление преобразованной цифры к ax
inc si ; Переход к следующему символу
jmp ii2 ; Пропуск на начало цикла

er:
mov dx, offset error ; Загрузка адреса сообщения об ошибке
mov ah, 09h ; Функция отображения строки
int 21h ; Вызов DOS-сервиса
int 20h ; Завершение программы

endin:
cmp di, 1 ; Проверка, было ли число отрицательным
jnz ii3
neg ax ; Отрицание ax если число было отрицательным

ii3:
ret ; Возврат к вызывающему коду

InputInt endp

OutBin proc
mov bx, ax ; Копирование значения в bx
mov cx, 16 ; Установка счетчика на 16
ob1:
shl bx, 1 ; Сдвиг bx влево на 1 бит
jc ob2 ; Пропуск если перенос установлен (бит был 1)

mov dl, '0' ; Если бит был 0, установить dl в '0'
jmp ob3

ob2:
mov dl, '1' ; Если бит был 1, установить dl в '1'
ob3:
mov ah, 2 ; Функция отображения символа
int 21h ; Вызов DOS-сервиса
loop ob1 ; Уменьшение cx и пропуск, если cx не равно нулю

mov dl, ' '
mov ah, 02h
int 21h

OutBin endp

start:
call InputInt ; Вызов функции ввода
call OutBin ; Вызов функции вывода
mov ah, 4ch ; Функция для завершения программы
int 21h ; Вызов DOS-сервиса
end start
